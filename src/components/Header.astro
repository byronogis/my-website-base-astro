---
import { SITE_NAVIGATION, SITE_TITLE } from '~/consts'
import HeaderLink from '~/components/HeaderLink.astro'
import ColorMode from '~/components/ColorMode.astro'
import Search from '~/components/Search.vue'

interface Props {
  class?: string
}

const { class: ClassName } = Astro.props
---

<header class:list={[
  ClassName, 'components-header global-bg-blur',
]}>
<div class="container m-a lt-sm:p-x-4 flex items-center content-start justify-between flex-wrap">
  <a href="/" class="hover:decoration-none">
    <h2 class="text-6">
        <div class="logo hidden w-1em h-1em lt-sm:inline-block" />
        <span class="lt-sm:hidden">{SITE_TITLE}</span>
    </h2>
  </a>
  <nav class="sticky top-10px flex items-center">
    {SITE_NAVIGATION.map((item, index) => (
      <span
        class=''
        class:list={[{ 'm-l-4': index, 'lt-sm:hidden': !item.pin }]}
      >
        <HeaderLink
          href={item.href}
          target={item.external ? '_blank' : '_self'}
        >{item.value}</HeaderLink>
      </span>
    ))}
    <ColorMode class="m-l-4"></ColorMode>

    <span class="i-carbon-search m-l-4">
      <Search client:only="vue">Search</Search>
    </span>

    <span class="i-carbon-menu sm:hidden m-l-4 components-header-menu"></span>
  </nav>

  <div class:list={[
    'components-header-menu-panel',
    'w-full hidden sm:hidden text-center',
  ]}>
    <div class:list={[
      'components-header-menu-panel-inner',
      'absolute inset-0 z--1 flex flex-col items-center justify-center',
    ]}>
      {SITE_NAVIGATION.filter(i => !i.pin).map((item, index) => (
        <span class="text-6 p-y-4">
          <HeaderLink
            href={item.href}
            target={item.external ? '_blank' : '_self'}
          >{item.value}</HeaderLink>
        </span>
      ))}
    </div>
  </div>
</div>
</header>

<style>
  .logo {
    background-color: var(--color-text);
    -webkit-mask: url(/favicon.svg) no-repeat center;
    mask: url(/favicon.svg) no-repeat center;
  }

  .components-header-open {
    height: 100%;
  }
</style>

<script>
  const componentsHeaderEl = document.querySelector('.components-header')
  const componentsHeaderMenuEl = document.querySelector('.components-header-menu')
  const componentsHeaderMenuPanelEl = document.querySelector('.components-header-menu-panel')
  const componentsHeaderMenuPanelInnerEl = document.querySelector('.components-header-menu-panel-inner')

  componentsHeaderMenuEl?.addEventListener('click', () => {
    const isPanelClose = componentsHeaderMenuPanelEl?.classList.contains('hidden')
    componentsHeaderEl?.classList[isPanelClose ? 'add' : 'remove']('components-header-open')
    componentsHeaderMenuPanelEl?.classList.toggle('hidden')
  })

  componentsHeaderMenuPanelInnerEl?.addEventListener('click', e => {
    if (e.target !== e.currentTarget) {
      return
    }
    componentsHeaderEl?.classList.remove('components-header-open')
    componentsHeaderMenuPanelEl?.classList.add('hidden')
  })
</script>
