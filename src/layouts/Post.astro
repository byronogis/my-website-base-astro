---
import type { CollectionEntry } from 'astro:content'
import DefaultLayout from '~/layouts/Default.astro'
import FormattedDate from '~/components/FormattedDate.astro'

type Props = CollectionEntry<'essay'>['data']

const { title, description, date, update, heroImage, heroImageAlt, head, tags } = Astro.props;
---

<DefaultLayout {...{ title, description, head }}>
  <article class="typo" data-pagefind-body>
    {
      heroImage
      && <img
          class="m-auto"
          width={720} height={360} src={heroImage} alt={heroImageAlt ?? title}
          data-pagefind-meta="image[src], image_alt[alt]"
        />
    }
    <h1 class="m-t-1 text-8" data-pagefind-meta="title">{title}</h1>
    <!-- <FormattedDate date={date} /> -->
    {
      (
        <div class="flex justify-between">
          <div class="italic">
            最后更新于 <FormattedDate date={update || date} data-pagefind-meta={`data:${update || date}`} />
          </div>
          <ul class="flex">
            {tags?.map(tag => (
              <li class="p-x-1 text-4 list-none">
                <a class="text-gray-400 hover:text-gray-700" href={`/essay/tag/${tag}`}>{tag}</a>
              </li>
            ))}
          </ul>
        </div>
      )
    }
    <hr />
    <main class="layouts-post-main">
      <slot />
    </main>
  </article>
</DefaultLayout>

<script>
document.querySelector('.layouts-post-main')?.addEventListener(
  'click',
  event => {
    if (
      event.target
      && event.target instanceof HTMLAnchorElement
      && event.target.hash.slice(1).match(/^toc-/)
    ) {
      event.preventDefault()

      const hashSource = event.target.hash.slice(1).replace(/^toc-/, '')
      const hash = decodeURIComponent(hashSource).toLowerCase()

      event.target.hash = hash
      history.pushState(null, '', event.target.href)

      jumpToHash(hash)
    }
  },
  false,
)
window.addEventListener('load', () => {
  if (!location.hash) {
    return
  }

  const hashSource = location.hash.slice(1)
  const hash = decodeURIComponent(hashSource).toLowerCase()

  setTimeout(() => {
    jumpToHash(hash)
  }, 0)
})

function jumpToHash(hash: string) {
  const target = document.getElementById(hash) || document.getElementsByName(hash)[0]
  window.scrollTo({
    top: target?.offsetTop - 100,
    left: 100,
    behavior: 'smooth',
  })
}
</script>

<style>
  /* :global(#目录 + p + details > ul) {
    position: sticky;
    z-index: 10;
    top: 0;
    padding: 1em;
    max-height: 50vh;
    overflow: auto;
    background-color: #fff;
  }
  :global(#目录 + p + details) {
    padding:0.5em;
    background-color: #fff;
    position: sticky;
    z-index: 11;
    top: 0;
    border-radius: 0.5em;
    box-shadow: 0px 2px 5px 2px #eee;
  } */
</style>

<script>
  // const toc = document.querySelector('#目录 + p + details')
  // toc?.addEventListener('click', (e: any) => {
  //   if (e.target?.tagName === 'SUMMARY') {
  //     return
  //   }
  //   const isOpen = toc.getAttribute('open') === null
  //   isOpen ? toc.setAttribute('open', '') : toc.removeAttribute('open')
  // }, false)
</script>
